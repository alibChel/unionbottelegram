import apiai,json
from telegram import Update
from telegram import KeyboardButton
from telegram import ReplyKeyboardMarkup,ReplyKeyboardRemove
from telegram.ext import Updater
from telegram.ext import CallbackContext
from telegram.ext import MessageHandler
from telegram.ext import Filters


button_start='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤'
button_help='–£–ª—É—á—à–µ–Ω–∏–µ Union'
buton_caption='–¢–∏—Ç—Ä—ã'
game=False

def button_help_handler(update:Update,context:CallbackContext,game):
    update.message.reply_text(
        text='–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–ª—É—á—à–∏—Ç—å –≤ Union?',
        reply_markup=ReplyKeyboardRemove(),
    )
def message(message):
    global  response
    request=apiai.ApiAI('44875a454dbd4b0fbbe1613e9240b34d').text_request()
    request.lang='ru'
    request.session_id='session_1'
    request.query=message
    response=json.loads(request.getresponse().read().decode('utf-8'))
    print( response['result']['action'])
    if response['result']['action']=='input.unknown':
        return '–Ø –Ω–∞ —ç—Ç–æ, –Ω–µ –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å!'
    else:
        return response['result']['fulfillment']['speech']



def help (update:Update,context:CallbackContext):
    update.message.reply_text(
        text='–ø–æ–º–æ—â–∏ –Ω–µ –±—É–¥–µ—Ç))))))'
    )

def button_start_handler(update:Update,context:CallbackContext):
    update.message.reply_text(
        text=('–Ω—É –¥–∞–≤–∞–π—Ç–µ, —è –≥–æ—Ç–æ–≤!'),
        reply_markup=ReplyKeyboardRemove()

    )
def button_caption_handler(update:Update,context:CallbackContext):
    name = 'caption.txt'
    file = open(name, 'r')
    new = file.read()
    update.message.reply_text(
        text=(new),
        reply_markup=ReplyKeyboardRemove()
    )
def start(update:Update,context:CallbackContext):
    update.message.reply_text(
        text='–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —á–∞—Ç–∞ Union üòé –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é Unionüòè –¥–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–πüôÇ'
    )


def message_handler(update:Update, context:CallbackContext):
    global game
    text=update.message.text
    if text==buton_caption:
        return button_caption_handler(update=update,context=context)
    if text == '/help':
        game=4
        return help(update=update,context=context)
    if text==button_help:
        game=1
        return button_help_handler(update=update,context=context,game=True)
    if text==button_start:
        game=2
        return button_start_handler(update=update,context=context)
    if text=='/start':
        return help(update=update, context=context)


    reply_markup=ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text=button_help),
                KeyboardButton(text=button_start),

            ],
            [
            KeyboardButton(text=buton_caption)],

        ],
        resize_keyboard=True
    )
    if game==1:
        update.message.reply_text(
            text='–°–ø–∞—Å–∏–±–æ!—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ø—Ä–æ–±—É—é –≤–Ω–µ–¥—Ä–∏—Ç—å, –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µüßê\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ Union!\n–•–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤  –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é? –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –∏ —è –≤—Å–µ —Å–¥–µ–ª–∞—éüôÉ',

            )
        game=3
    elif game==2:
        update.message.reply_text(
            text='–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–¥ —ç—Ç–∏–º –ø–æ–¥—É–º–∞—éü§î\n –∏  –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Å–¥–µ–ª–∞—Ç—å —á–∞—Ç –ª—É—á—à–µüôÉ\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ Union!\n–•–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é? –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –∏ —è –≤—Å–µ —Å–¥–µ–ª–∞—éü§ì',
            )
        game=3

    else:
        update.message.reply_text(
            text=message(text),
            reply_markup=reply_markup)





def main():
    print('Start')
    updater=Updater(
        token='1164909696:AAE9Do5JqnH-W_3mks1PTpsNwO5IyCQXmRU',
        use_context=True
    )
    print('ko')
    updater.dispatcher.add_handler(MessageHandler(filters=Filters.text,callback=message_handler))
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
